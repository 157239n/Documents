
help("modules"), can use for function names and stuff

type hinting:
from typing import Callable, List, Dict, Tuple, Sequence, Any, Iterator, Iterable, Set
def greeting(name: str) -> str:
    return 'Hello ' + name
List[float]

pathlib, https://docs.python.org/3/library/pathlib.html:
Path("/home/user/setup.py")

import inspect
inspect.getsource(len)


standalone python script (don't even need to have python binary installed)
pyinstaller --onefile abc.py




import functools
def do_twice(func):
    @functools.wraps(func) # to preserve docs of func and whatnot
    def wrapper_do_twice(*args, **kwargs):
        func(*args, **kwargs)
        return func(*args, **kwargs)
    return wrapper_do_twice

https://wiki.python.org/moin/PythonDecorators
https://www.programiz.com/python-programming/decorator
https://realpython.com/primer-on-python-decorators/

just in case:
- https://stackoverflow.com/questions/12540290/how-to-organize-multiple-python-files-into-a-single-module-without-it-behaving-l
- https://packaging.python.org/guides/packaging-namespace-packages/
- https://stackoverflow.com/questions/448271/what-is-init-py-for





C integration:
- http://scipy-lectures.org/advanced/interfacing_with_c/interfacing_with_c.html
- cython?
- "how does python interop with C"
- https://realpython.com/python-bindings-overview/



relative imports:
- https://stackoverflow.com/questions/16981921/relative-imports-in-python-3
- https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time/14132912#14132912
- https://chrisyeh96.github.io/2017/08/08/definitive-guide-python-imports.html
- https://realpython.com/absolute-vs-relative-python-imports/
- https://docs.python.org/3/reference/import.html
- cyclical imports: https://stackoverflow.com/questions/744373/circular-or-cyclic-imports-in-python
- https://stackoverflow.com/questions/30669474/beyond-top-level-package-error-in-relative-import
- https://stackoverflow.com/questions/6323860/sibling-package-imports



./setup.py sdist
twine upload dist/*


im = Image.open(requests.get(url, stream=True).raw)
