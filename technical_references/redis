
redis = remote dictionary server

built in data structures:
- lists
- sets: keys can't repeat, any order
- sorted sets
- hashes
- hyperloglogs: probabilistic data structure, used for cardinality of sets. Aka counting
- bitmaps
- geospatial indexes
- bitfields
- streams
- strings

common use cases:
- cache
- analytics
- leaderboard
- queues
- cookie storage
- expiring data
- distributing locks
- high io workloads
- messaging
- pub/sub

cli. Should note that once you have the cli, there is the autocomplete feature which is very handy:
- dead simple:
  - set key value
  - get key
  - incr key, incrby, decr, decrby
  - getset
  - mset, mget, multiple __
  - expire key seconds
  - ttl key
- lists:
  - rpush list A, lpush list B
  - lrange list start end, can be negative
  - rpop list, lpop list
  - ltrim list start end, like lrange, but sets the list to the new range
  