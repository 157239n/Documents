
under the hood:
- https://eliav2.github.io/how-react-hooks-work/
- https://stackoverflow.com/questions/53974865/how-do-react-hooks-determine-the-component-that-they-are-for/53980190#53980190
- https://overreacted.io/a-complete-guide-to-useeffect/

https://reactnative.dev/docs/environment-setup/
https://reactnative.dev/docs/running-on-device/
https://reactnative.dev/docs/debugging/#accessing-the-in-app-developer-menu
https://developers.google.com/web/tools/chrome-devtools?utm_source=dcc&utm_medium=redirect&utm_campaign=2018Q2
https://github.com/electron/electron/issues/8466
https://stackoverflow.com/questions/42636151/electron-failed-to-install-correctly-please-delete-node-modules-and-try-instal

default start:
import logo from './logo.svg';
      <header className="App-header">
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
          <RedSquare/>
        </p>
        <a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Learn React
        </a>
      </header>

--------------- native ---------------

https://nodejs.org/en/docs/
https://reactnative.dev/docs/appregistry
https://reactnative.dev/docs/environment-setup


react-navigation
Reanimated v2
enabling hermes
Platform.OS

justifyContent: flex-end
alignItems: center
flexBasis: width or height, dpi
flexGrow/flex: percentage to grow
flexShrink: this element can shrink to allow other elements to fill in

import React from "react";
import { View, StyleSheet } from "react-native";
import { MaterialCommunityIcons } from '@expo/vector-icons'

View, Text, Image, Touchable..., SafeAreaView, Switch


import logo from './logo.svg';
<img src={logo} className="App-logo" alt="logo" />

if want a stylesheet, just do: import './App.css'; and can use all class and id styles






npx react-native start
npx react-native run-ios

goals:
- run with android studio, run with ios simulator after a reboot
- add android native permissions, test those permissions out
- test get request, print out using js
- test get request, print out using native code

https://github.com/alinz/react-native-share-extension
https://github.com/ajith-ab/react-native-receive-sharing-intent
https://docs.expo.dev/versions/latest/sdk/sharing/
https://docs.expo.dev/versions/latest/sdk/filesystem/
https://www.npmjs.com/package/react-native-fs

so things to rigorously test out without expo:
- share with other applications
- other applications share with us
- local storage, key-value pairs
- file storage
- notifications
- random draw on screen, like p5
- audio
- video
- clipboard
- sms
- over the air update

adb shell input keyevent 82

