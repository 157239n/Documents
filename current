
So, plan to deal with this whole problem:
- (done) Learn about the remaining IT stuff: Docker and Gradle
- (done) Learn about networking and possibly wiggle around the Raspberry Py to understand more
- Learn about some mechanical engineering stuff, to the point that I have a feeling and intuition for stresses and strains
- (low priority) Learn about some fluid dynamics and thermodynamics, for understanding the applicability of science
- Switch major to mechanical engineering, and get into a machine/hardware shop. Ask for contacts for students that are actually building hardware products for customers, from scratch. I remember Khue's friend used to do that.
- Buy Tesla stocks once I get the SSN

Old ipcc stuff: https://arctic-news.blogspot.com/2018/10/ipcc-keeps-feeding-the-addiction.html?fbclid=IwAR1ImdFF2KAzwHX4zLaLGHGVLflRVFJo2QdxaFldFPqAoJLesRFtbiasm8k

Bookmarked books (local paths!!):
- Understanding earth: file:///C:/Users/Lenovo-1/Downloads/John%20Grotzinger,%20Thomas%20H.%20Jordan,%20Frank%20Press,%20Raymond%20Siever%20-%20Understanding%20Earth%205th%20Ed..pdf
- Drawdown on phone
- Ignition on gg books

Okay, path from now:
- finish all documentaries, one every day!!!
- learn AI stuff, david silver's markov chains: https://www.youtube.com/watch?v=lfHX2hHRMVQ
- read understanding earth
- read rocket propulsion elements
- ml-class.org

primers:
- business
- diplomacy
- united nations
- crawler

Rewatch this talk about AI alignment problem, why it's hard and important: https://www.youtube.com/watch?v=EUjc1WuyPT8

AI & logical induction: https://www.youtube.com/watch?v=gDqkCxYYDGk

try brilliant

Research about the viability of nuclear. So tech seems okay. What about the money? Profile several nuclear plants

UN stuff:
- https://www.youtube.com/user/unitednations/playlists
- https://en.wikipedia.org/wiki/Group_of_Seven
- non governmental organizations (list)
- https://www.reddit.com/r/explainlikeimfive/comments/6zsfzi/eli5_whats_the_so_called_deep_state/
- https://www.mymiv.org/
- https://www.un.org/en/sections/un-charter/un-charter-full-text/
- https://en.wikipedia.org/wiki/Charter_of_the_United_Nations
- G20: https://g20.org/en/summit/
- https://www.reddit.com/r/explainlikeimfive/comments/6q0qnv/eli5_what_is_the_difference_between_a_referendum/

Also look into shark tank
Crash Course Government and Politics

ocean related climate stuff:
- Ocean Science Podcast (prob can't do much in, cause it's a podcast, meaning long)
- Speak Up for Blue

https://www.dawdlersphilosophy.com/e7-summer-at-aphelion/

"carbon sequestration through ecosystem restoration", another term for CCUS

why was there apparently no action against climate in the gov area? Why has tries over the past couple of decades seemingly vanish?
ecotourism

"business cases for mitigation and adaption in climate"

control engineering

Climate change stuff to process:
- https://medium.com/literate-science/hey-scientist-are-you-ready-to-talk-to-the-media-dd18f0872d34
- https://www.aaas.org/events/reddit-ama-jessica-hellmann-and-tessa-hill-improving-how-scientists-can-talk-public-about
- https://sharingscience.agu.org/reddit-science-ask-anything/
- https://www.youtube.com/watch?v=f6_OVfrc_5A

https://whydoesitsuck.com/

Global thermostat, Prometheus, Carbon engineering

Extra credits:
- Money: https://www.youtube.com/watch?v=GKtNuzakzMA&list=PLhyKYa0YJ_5CL-krstYn532QY1Ayo27s1&index=3
- Games: https://www.youtube.com/watch?v=lHcTKWiZ8sI&list=PLhyKYa0YJ_5AAbhb9A_CxOEGsdORotH48
- Politics: https://www.youtube.com/watch?v=Xm-L9cIRdmY&list=PLhyKYa0YJ_5BMjoxHASNb0uGK_XQrUx9D

For dummies: https://www.goodreads.com/list/show/2683.For_Dummies_Series
- Managing money: file:///C:/Users/Lenovo-1/Downloads/(For%20Dummies)%20Benna%20T.,%20Bucci%20S.R.,%20Caher%20J.P.,%20Caher%20J.M.,%20Caverly%20N.B.,%20Economy%20P.,%20Hungelmann%20J.,%20Lucas%20J.E.,%20Lyons%20S.G.,%20Munro%20M.A.,%20Newmann%20B.W.,%20Reed%20M.,%20Simon%20J.S.,%20Sindell%20K.,%20Taylor-Hough%20D.,.pdf

Science funding:
- https://en.wikipedia.org/wiki/Funding_of_science
- https://www.acsh.org/news/2017/02/07/how-science-funded-united-states-10816
- https://www.sciencedaily.com/terms/science_policy.htm

Books on money: "virtual environment to experiment with business"
- http://gen.lib.rus.ec/book/index.php?md5=85B13B5F090A4890572C5698B3575563
- http://gen.lib.rus.ec/book/index.php?md5=8AA6343D7F4E6117B7316C7069E99D02
- http://gen.lib.rus.ec/book/index.php?md5=10DF87D2CAF65BCA13B3E7440E41FEAD
- http://gen.lib.rus.ec/book/index.php?md5=635FF4858EF42C1DF8B93B2578482C13

Dry electrode coating technology: http://www.powersourcesconference.com/Power%20Sources%202018%20Digest/docs/3-1.pdf

Look over CircleCI:
- https://circleci.com/docs/2.0/tutorials/
- https://circleci.com/docs/2.0/project-walkthrough/

Old electrical stuff from MIT:
- https://www.youtube.com/watch?v=3GdMaDzIUeQ&list=PL9F74AFA03AA06A11&index=18
- https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-002-circuits-and-electronics-spring-2007/video-lectures/

Rocket propulsion elements to process: file:///C:/Users/Lenovo-1/Downloads/George%20P.%20Sutton,%20Oscar%20Biblarz%20-%20Rocket%20Propulsion%20Elements-Wiley%20(2016).pdf

andrew stuff: https://www.coursera.org/learn/machine-learning

So what's the carrying capacity for the human race?

Now it kinda feels the whole field is a bit toxic, because like, it appears that we have exceeded our carrying capacity and further advocacy might as well tank the world's economy

green new deal: https://www.youtube.com/watch?v=GxIDJWCbk6I

question to ask chi:
- what are all the toys, how can they be used? How about an example of a different research direction using those same types of toys?
- what are the equivalent of these toys that are used in the industry? How about an example outside of academic research that use these toys? Do they even use these toys at all?
- what's the research exactly about? Get into the nitty gritty details
- now suppose that the research has reached its goals, how can it be approved for mass consumption
- how does employment in that field works
- how the research is financed, what's the whole stuff with "defending your dissertation" looks like?

Also understand the perspective of a climate scientists doing these things too. Examples would be Hayhoe (obvious), Laura Iraci, Rama Nemani, Matthew Hansen
Thomas Friedman
Susan Rice, us national security advisor

Also see the process of how oil refineries work, how pumpjacks work to the point as if I'm visiting it. Do the same for those industries that I care so much about, like ethanol, steel and cement. Do the same for a solar plant like Andasol.

I guess I wanted to learn about automation is to know if I can build my own factory/plant. If I can, and if I know how professional stuff are done there, I can out source it effectively, and at the same time manage the money flow too.

Also see how can solar panels are mass produced, what are the remaining challenges, (or any). Also see whether it will solve the electricity problem in full (meaning I can clearly see a path, and measure progress on that path) as I thought it would. If not then I'll have to reevaluate my plan

Additional heating over last decade: 8*10^21 Joules per year

How about the science left to do with Lithium and Lithium ion batteries?

And again, look into creating several startup types, one being manufacturing, one being industrial, one being web service, one being biochemical engineering.

Familiarize myself with permits and environmental regulations that are floating around in the world right now.

To understand the supply chain and how can I affect it, look for ways to mitigate palm oil.

"climate change without bullshit". Important article to go through: https://www.vox.com/energy-and-environment/2018/5/7/17306008/climate-change-global-warming-scenarios-ambition

Dig into the quick history of human kind. Possibly watching Origins again

Kickstarter: https://www.reddit.com/r/Entrepreneur/comments/7lzqyo/anyone_have_experience_with_kickstarter_tips/

Also intro to family planning and those kind of stuff, and investigate the claim made by drawdown

In light of drawdown, how about I discuss it with a lot of people, hold conferences at many different places and also change the textbook?

get into the mining and petrochemical industry. Also play satisfactory to begin to appreciate the size of these industrial machines, also the interconnections between them. https://www.epicgames.com/store/en-US/product/satisfactory/home. Did so, but it seems like this view of full automation is kind of misleading, because in the real world, we do not have the freedom of picking up factories and ploping them down. We have a preconceived idea of how the factory is structured, how things move in and out, and there is typically only 1 main assembling line. Other improvements are about efficiency, speed-wise. So it's really, really different from the type of scaling in satisfactory or in factorio.

what I understand now is that a plant can just spring up easily, and I mean really easily. The real barrier is the government and the market. But like, I need to study to the point where I can that whole facility by myself then study about the market and the government.

467kWh - 1.2tr

vn energy outlook: https://ens.dk/sites/ens.dk/files/Globalcooperation/Official_docs/Vietnam/vietnam-energy-outlook-report-2017-eng.pdf

data series on computerphile: https://www.youtube.com/watch?v=8GIbOJtUw8w

other programming books: https://www.packtpub.com/all-products?released=Available&page=3
- https://www.packtpub.com/application-development/hands-systems-programming-go
- https://www.packtpub.com/application-development/hands-embedded-programming-qt
- https://www.packtpub.com/data/natural-language-processing-fundamentals-e-learning
- https://www.packtpub.com/big-data-and-business-intelligence/hands-deep-learning-iot
- https://www.packtpub.com/application-development/jira-8-administration-cookbook-third-edition

"permaculture gardens"
aeroponics
aquaponics

what's with wealth vs money

book, The Visual Display of Quantitative Information, Edward Tufte

what about acrylic and laser cutting stuff, DXF, DWG, CDR, AI file types: https://www.makerstore.vn/services/dich-vu-cat-laser/

also elec engr stuff, eevblog

I need to study other things before diving again into climate, so here are the links:
- drawdown: file:///C:/Users/Lenovo-1/Downloads/Paul%20Hawken%20-%20Drawdown_%20The%20Most%20Comprehensive%20Plan%20Ever%20Proposed%20to%20Reverse%20Global%20Warming-Penguin%20Books%20(2017).pdf
- sr15: https://report.ipcc.ch/sr15/pdf/sr15_spm_final.pdf
- kyoto protocol: https://en.wikipedia.org/wiki/Kyoto_Protocol

i guess what i am looking for is "manufacturing and supply chain", which nha's books kinda gives me the foundations

how stuff works in life in general: https://www.artofmanliness.com/tag/heading-out-on-your-own/

archicad

oh wow, this is such a gem about manufacturing and prototyping: https://www.3dhubs.com/knowledge-base/how-design-parts-injection-molding

okay, so I got the heavy industries down. I know what machines are there, how do these pieces fit together. Now see the same for the semiconductor industry, and what's the deal with all of those substrates, the doping and the etching? Also how metal working works, and how foundaries work too. For this, may be look for yt channels like king of random or night hawk

some recycling stats: https://www.youtube.com/watch?v=1mxaN_xqQh4

so I guess what I wanted to do about climate through all of these investigation might be giving out suggestions to improve stuff

Manufacturing:
- "reddit industrial machine design process"
- I still don't know how to build a factory from scratch tho, so still make an effort to dig into it
- also should I get involved in the manufacturing business?
- also what software do they use for monitoring automated stuff? Probably a course in automation will do it
- profile sinarmas
- also how oil products are refined
- how electricity in industrial systems work?

also see over how public talking works, what venues I can penetrate into

how waste management works
also how to futureproof myself
how to contract out for a whole factory?
so the guts of mechanical engineering is to be damn precise and to be rigid

about the climate stuff. What resources do I have an infinite amount of that I can rely on? I have been taking electricity for granted

may be getting back into the finite element analysis thing if I have time: https://www.youtube.com/watch?v=txk-VO1hzBY

for the long future, again, dyson swarm and solar panels on orbit

read the 14 pages of the green new deal
also metals scarcity seems to be a thing too. So dig into that
the art of not being governed: an anarchist history of upland southeast asia, james scott

Global climate action summit (9 hours long summit lol): https://www.youtube.com/watch?v=FuxHDD_pLf0
also go through all of practical engineering to get the feel for the field
so as a test of building big things, see how wind turbines are built and how 1 guy can do that
also see how can you program those huge robot arms from japan

also, may be go over really quickly the economic vids on khan academy, they have a lot of content and possibly gems that I can utilize

and then finish the freakonomics book. Why do I feel like that book is kinda more anecdotal and won't actually introduce to the big picture.

what's the deal with chemtrails?
 
2 hour session used to go to about data stuff: https://www.youtube.com/watch?v=xvdXi4ejk2w

UN population stuff:
- https://www.un.org/en/sections/issues-depth/population/
- https://www.un.org/popin/icpd/conference/bkg/wppa.html
- https://www.un.org/development/desa/en/news/population/world-population-prospects-2017.html

how water works, mesopotamia, 691 BCE

how about something like factorio, but much deeper, requiring much more effort, containing a lot more content. But this time it will be simpler. I'm imagining something like an industry simulator

also materials science? May be learn 3-4 courses in that

crash course politics: https://www.youtube.com/watch?v=lrk4oY7UxpQ&list=PL8dPuuaLjXtOfse2ncvffeelTrqvhrz8H

UK Biomass Plant Carbon Capture project, Drax power station, North Yorkshire
Spray ship for marine cloud brightening
Jupiter technologies, flood analysis, short term predictions
Hafen City

John Englander's talk: https://www.youtube.com/watch?v=MvqY2NcBWI8. Watched it, but he mentions 2 times about Vietnam, which is a very specific thing to talk about. So see what he has been doing because I'm pretty scared when he say that.
International Sea Level Institute.
Sanan Sino-Science, chinese comp that plant trees in doors, price 11 times higher than the market average. No pescitides needed, and not much water needed too

Also dig into hydroponics and aquaponics

again, I feel that econ stuff is so "floating". I don't know where their absolute zero is. But I suspect that no one actually know how it works and just follow with the flow. Also, spend some time writing about how problems in Factorio differ from logistic problems in real life

Again, try to make an ASIC, application specific integrated circuits. Try to get myself to the cutting edge of these circuits and systems.

https://en.wikipedia.org/wiki/Estuary
https://en.wikipedia.org/wiki/Brackish_water

investigate sharing excess and their model or donations and seemingly almost charity

Primer channel about econ looks good too

"depleting resources"
Crash course engineering: https://www.youtube.com/watch?v=ivWXuOd5SrI&list=PL8dPuuaLjXtO4A_tL6DLZRotxEb114cMR&index=23

Again, that freakonomics stuff: https://www.youtube.com/watch?v=5UGC2nLnaes
Multi programming: https://www.youtube.com/watch?v=MB0yDMQj1lU
Sim cards: https://www.youtube.com/watch?v=iJFnYBJJiuQ
Gateway accident: https://www.youtube.com/watch?v=rQvGtvLqmos

Humanitarian stuff:
- https://www.odi.org/events/2655-humanitarian-space-concepts-definitions-and-uses
- https://www.unocha.org/sites/dms/Documents/OOM-humanitarianprinciples_eng_June12.pdf
- https://humanitarianencyclopedia.org/
- https://www.odi.org/sites/odi.org.uk/files/odi-assets/events-documents/4648.pdf
- https://www.evidenceaid.org/do-we-all-speak-and-practice-humanitarian-in-the-same-way/
- https://en.wikipedia.org/wiki/Humanitarian_aid

yang2020.com, https://www.businessinsider.com/tesla-ceo-elon-musk-2020-election-endorsement-andrew-yang-president-2019-8

Again, how can contracts be reinforced?

Also how does the connection between countries work? How can one company be international?

world energy council

how do you actually deal with soil erosion?
- https://en.wikipedia.org/wiki/Crop_rotation
- https://www.sciencedirect.com/topics/agricultural-and-biological-sciences/shifting-cultivation
- https://en.wikipedia.org/wiki/Shifting_cultivation
- http://www.mekonginfo.org/assets/midocs/0002082-environment-shifting-cultivation-in-vietnam-its-social-economic-and-environmental-values-relative-to-alternative-land-use.pdf

SR15 shits again: https://en.wikipedia.org/wiki/Special_Report_on_Global_Warming_of_1.5_°C

nuclear debate again: https://www.youtube.com/watch?v=NclA1Y4V7R4

Amory Lovins energy efficiency argument: https://e360.yale.edu/features/amory_lovins_energy_efficiency_is_the_key

some other reports:
- https://www.iea.org/etp/explore/
- https://www.iea.org/etp2017/

seems like nice vids about econ: https://www.youtube.com/user/MrUniversity/playlists
imf vids, short, seems good: https://www.youtube.com/watch?v=Igkpbqb0uXA&list=PLmYAE4wV1YQwWtLOxgtx33DxPcfDfYZ3h

?https://gocardless.com

subpoena? again lmao

nice channel about engineering: https://www.youtube.com/channel/UCosExgfjj-DhMJXnQd2Y4gA/videos

compile a list of interesting points about climate change to talk with that librarian:
- trees absorb 3kg CO2 per year, aggregate: 9GtCO2/yr. Today it's 40GtCO2/yr
- reality check on renewables

go through this, and consider this done: https://www.youtube.com/watch?v=ImtZ5yENzgE

again, get into manufacturing

how technology licensing work? like jpl and nasa

https://drexel.edu/green/

visit a geothermal plant
enhanced geothermal systems

look into this:
- https://en.wikipedia.org/wiki/Cost_of_electricity_by_source
- https://en.wikipedia.org/wiki/Electricity_pricing
Valuable image: https://www.researchgate.net/figure/Ragone-plot-of-various-battery-technologies-with-specification-at-cell-level-for_fig1_258177713

Again, look into this Andrew Yang guy, for the renewables and such
look over to see whether this is worthy: https://aiesec.org/global-volunteer

again, investigate the idea for actually building a dyson sphere

skillshare has a course in business stuff

doug ellison, amature guy, eventually works in jpl, uses data from nasa, the freely accessible ones

dig into quantum computing again for a little bit
Richard Sutton, David Silver RL: https://www.youtube.com/watch?v=2pWv7GOvuf0&list=PLqYmG7hTraZDM-OYHWgPebj2MfCFzFObQ
diamandis: https://www.diamandis.com/blog/podcast-episode-75-private-space-exploration

https://ai.googleblog.com/2017/06/supercharge-your-computer-vision-models.html
so, applications:
- that ocr thing with nutritional value (lmao, and make it quick). Also for money stuff
- try out the organic stuff at autodesk
- then the story of energy

also interesting stuff/data here: https://oceanservice.noaa.gov/welcome.html and here: https://coast.noaa.gov/digitalcoast/. Man, the last one is a data gem. Also poking data here will make me understand about lidar stuff too

get into the current resolution capability of earth, and see over that project to image the black hole shit. Like, I know that they are using that regenerative algorithm shit in order to reconstruct the full image, like the technique used in MRI. So, dig into all of physics, up to what I've known about particle physics so far, then a bunch of simulations to carry out. Then simulate this regenerative algorithm shit. Kinda getting into the high tech for a moment. After that, surely I will have a bigger picture on global warming shits.

carbon xprize
TerraPower, travelling wave reactor

methane stuff: https://www.youtube.com/watch?v=62VXwjT-csQ

esa is the largest provider of environmental data from space in the world, thanks to copernicus, eu program, using earth observing satellites. Get this mother fucking data and dig into it.

Also I still don't get the interface for climate change. I mean, the common technical language ppl talk with each other in the field, so dig into that.

wtf is this https://americas.ramboll.com/projects

also I feel like I need to study physics rigorously now, with the state of mind that I've got

quickly go through everything here: http://www.worldscienceu.com/

read more about how these molecules are formed, then simulate that

international law: https://www.youtube.com/channel/UCGasG4aiJ2_8ar-EXGHI1kQ/videos

Also look over the internal documents to see if there's something fun.

stocks again, check out docs for robinhood

2 books:
- file:///C:/Users/Lenovo-1/Downloads/Ebook/Warehouse%20Management_%20A%20Complete%20Guide%20to%20Improving%20Efficiency%20and%20Minimizing%20Costs%20in%20the%20Modern%20Warehouse-Kogan%20Page%20(2014).pdf
- file:///C:/Users/Lenovo-1/Downloads/Christoph%20Roser%20-%20_Faster,%20Better,%20Cheaper_%20in%20the%20History%20of%20Manufacturing_%20From%20the%20Stone%20Age%20to%20Lean%20Manufacturing%20and%20Beyond-Productivity%20Press%20(2016).pdf

economics of nuclear: https://www.youtube.com/watch?v=cbeJIwF1pVY

SoftBank Vision Fund, dig into this, and the deal with wework too. And see if I can attack son

how regulations and regulation authorities

learn more about orbital dynamics man https://www.youtube.com/watch?v=dqwpQarrDwk. Math details: https://en.wikipedia.org/wiki/Space_tether

"Two-line element set (TLE)", insanely popular data format used to describe satellite orbits

see over chi's new lab reports and understand the chemistry she's currently involved in.

an interesting challenge that I think will be in the right step to understand the true solutions to climate change would be to do the terraformed mars thing, or at least look into casey's work and figure out how it works. Then use the data available for earthquakes and other stuff like tree tops, aggregated from satellites and whatnot to visualize and put together all of these data.

also a problem with money and law that I think I need to solve is that currently I'm kinda not using the legal library as the rest of the world. I need to know the details, to be aware of the parameters that introduces

from phone:
political:
- https://www.sba.gov/business-guide/10-steps-start-your-business/
- https://en.m.wikipedia.org/wiki/Model_United_Nations
- https://en.m.wikipedia.org/wiki/Diplomacy
- http://docs.everypolitician.org/use_the_data.html
- http://www.popoloproject.com/
- https://en.m.wikipedia.org/wiki/G20
- https://books.google.com/books?hl=en&lr=&id=sOELm3YduxQC&oi=fnd&pg=RA1-PR10&dq=%22middle%20power%22&ots=3zxChBjjoQ&sig=TH9T3_c8wdX6wUuUlmmhtCak0cg#v=onepage&q=%22middle%20power%22&f=false
- Junichi ihara united nations
- joko widodo
- vtsax
- https://amp.businessinsider.com/paypal-mafia-members-careers-elon-musk-peter-thiel-reid-hoffman-2019-11
it:
- https://www.technologyreview.com/s/612318/establishing-an-ai-code-of-ethics-will-be-harder-than-people-think/
- https://www.red-gate.com/simple-talk/sql/database-devops-sql/introduction-to-devops-devops-and-the-database/amp/
- https://github.com/dennybritz/reinforcement-learning
- https://towardsdatascience.com/recreating-imagination-deepmind-builds-neural-networks-that-spontaneously-replay-past-experiences-9b57a9c08316
- https://medium.com/saarthi-ai/how-to-design-better-chatbots-ae13f7fada6a
- https://github.com/cinder92/react-native-marvel-app
others:
- https://80000hours.org/career-guide/introduction/
- https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/
- https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-002-circuits-and-electronics-spring-2007/readings/
- https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-003-signals-and-systems-fall-2011/readings/
- https://alcor.org/BecomeMember/index.html
- https://www.healthline.com/nutrition/12-foods-for-healthy-skin#section2

and may be figure out libraries to make a map of the world, for energy visualizations and whatnot. Yiss, found it: https://medium.com/processing-foundation/maps-maps-maps-f0914218c87b. Suspecting that this is java-based tho. So look around for js ones cuz that's the important bit in getting this data out

again with that series on money. Gem that too

5:27 mark: https://www.youtube.com/watch?v=3Kq1MIfTWCE

company provisioning:
- d-rev
- windpax
- BioLite, solving particulate matter problem, seems like they did quite a good job, reducing 95%, so check them out, see if they're successful
- position dynamics: http://www.positrondynamics.com

so, priorities now (if meanwhile i got crazy because of the pressure, play factorio to get the scaling challenges, then may be walk and listen to those irregular podcasts, like anthropocene reviewed):
- get the mola mars data (Mars Orbiter Laser Altimeter), then fill 'em up with water, to probe at the actual scale of a planet, then try to read over casey's work to see how he does his simulation
- do the dora todo list thing, for gems about computational fluid dynamics (and navier stokes obviously) and whatnot
- then do actual simulations of cfd
- see how those folks aggregating data do it. At this point, I should have an idea of how this is like, with the mola plan above, so this will be sort of a best practice kind of approach. Candidate starting point would be that p5.js sketch thing, with the earthquake data, and also the website that aggregate deforestation information
- then see over other nasa's dataset, preferably about earth and start to dive deep into the current state of climate stuff, because I still don't entirely get it
- may be setting up tesseract again, then deal with all of those low hanging fruits that can be easily automated, to make my life a tad bit easier. https://github.com/tesseract-shadow/tesseract-ocr-re, and post on improving input image quality: https://github.com/tesseract-ocr/tesseract/wiki/ImproveQuality

what's the deal with customs?

https://www.simple.com/blog/international-money-transfers

read more into the imaging and the geography of mars: https://en.wikipedia.org/wiki/Mars_Global_Surveyor

casey's take on mola: https://github.com/CHandmer/water-flow
other casey stuff: http://www.caseyhandmer.com/home/mars

"liability insurance"

sông chày hang tối

processing maps:
- https://www.google.com/search?sxsrf=ACYBGNSLRG5iYY5VyqNzxaAPmplMWf90Fg%3A1576135287316&ei=d-rxXbzaEsTx5gK17YGwDQ&q=processing+map+visualization&oq=processing+us+map&gs_l=psy-ab.3.0.0i71l8.0.0..9075...0.1..0.0.0.......0......gws-wiz.yYBFnR7QcuY
- https://medium.com/processing-foundation/maps-maps-maps-f0914218c87b

TLE: https://celestrak.com/NORAD/elements/active.php

but still, focus on both k8s and the mola dataset, because I sort of have to split this workload into 2, or else I won't be able to do anything.

Handle secrets well. This can be delayed to the publish to github publicly phase, so this is not urgent at all.

that policy doc

so may be, create a program that can beat window's chess engine. This would sort of reintroduces some of the important ideas for dealing with mola

how mergers work?

joe's upcoming bronze age

air force space command manual: https://static.e-publishing.af.mil/production/1/afspc/publication/afspcman91-710v1/afspcman91-710v1.pdf

another feature I kinda want to implement is that of health checks. I kinda want every anomaly to be sent to me immediately, so that I can resolve the problem. K8S seems to be able to sort these things out quite well. The only problem I'm having with it is that it's just so god damn expensive, in terms of memory I mean. I figure that I can just use docker-compose for everything that I do, but I'm kinda addicted to the managed solution k8s provides. So, still test everything out, but do that after mola. And I think it's worth it to sort of experiment with kind and then try out the managed k8s that digitalocean provides.

nuclear series: https://www.youtube.com/watch?v=4FINQBiGPC4 also scott manley's

gem phineas and ferb songs, duckje3

autocmd FileType netrw setl bufhidden=delete

change mpm_prefork on virus blog page, also change mpm_event on the deployment one. This kinda seems easy now lmao. After switching, make sure that everything still works as usual, especially with weird file names.

may be let's just do the swarm thing really quick, then may be things can move along.

informal stuff, may return later:
- https://www.digitalocean.com/community/questions/lamp-on-ubuntu-14-04-with-apache-event-mpm
- "how php-fpm works"
- "opcode caching for PHP scripts"
- https://www.digitalocean.com/community/tutorials/how-to-configure-apache-http-with-mpm-event-and-php-fpm-on-freebsd-12-0

add this to vbs, to suppress errors when the virus itself is not there: On Error Resume Next

So, these are the properties of the swarm now:
- the webserver doesn't know where these viruses are
- thus, the webserver cannot have anyway of changing the swarm itself
- thus, the webserver cannot have any reports or health checks on the swarm (which is unsettling, but if the webserver knows too much then that's a weak spot too)
- the viruses' code cannot be modified to affect the entire swarm, if they are found out
- the hosts file cannot be read easily. But the fact that it can still be read, which is worrysome
- the startup folder only contain 1/2 of the swarm's # nodes, to make sure that no entity can just delete everything instantly by exploring the startup folder
- a healthy swarm I figure must contain 7 nodes, with 4 nodes in the startup folder.

Oh and btw, each target should have 1 simple virus and 1 swarm. The simple virus first, then the swarm later on

Oh and btw, I kinda want the entire thing. Like everything ever, takes place in a single file. Meaning, entry.cmd and worker.cmd are in a file, like a.cmd, then I can do a.cmd entry or something, then it will go to that mode. This kinda means that the entire thing can fit into 1 file and not a folder. But then again, there must be a place to store the hosts file, and the communications file, but all of the main logic should just happen in a file, and all other files are just for data stuff. Update: this can be sort of a challenging architectural decisions, on a lot of the details. And I can sort of overcomplicate things too much, like that api() function way back

how would the UI be different for end users? Quite normal, with these differences:
- will have different options when starting up:
  - number of viruses in the swarm. The larger it is, the more stable and impenetrable it is, but because it will reside randomly, there will be increased probability that it will get detected. Suggested number is 7
  - whether to include a self-destruct mechanism. This is final decision and cannnot be changed
- defcons to report back

Oh and, how would this sort of translate into the UI? everything will be quite normal though. Every attack will still be there, every graph will be the same too. The only difference is that the user cannot delete the swarm while they can delete a singular virus. The only major thing is that the adv.ExecuteScript gets much more limited access to the system itself. But, the swarm will be more battle hardened. Oh and that panic mode. If the leader detects that everything is in panic mode, then it will send special reports back to the webserver, which will sort of have some visual differences. Wait, so what about there are specific modules that the user, when the virus was first created, can sort of be "compiled-in". These modules can report much more data regularly, by the leader itself. When it's compiled in like this, it would be impossible to change it because of hash checking and stuff.

but wait, can't someone from the outside change both the virus content and the hash file outside? Then how can it sort of know that the original is authentic? Can this problem be mitigated at all? Where can I hide the hash? Preferably in an environmental variable of the running batch file. Oh wait no, so this problem has been mitigated already. Other viruses are constantly checking for the health of other viruses, and making sure that the hashes are all the same. But wait, what if someone knows the entire location of everything, then they can sort of fake the hashes right? Well, how about stop being paranoid, and accept that everything can be deleted this way? That they can sort of fake hases of everything. The only thing to guard against is to hash and unhash the hosts file while using it, so they can't easily know where they all are (still, the user can patiently wait for the cycle to refresh, so make sure in normal operation, there will always be viruses that stay dormant in the startup folder). But then again, they can get a list of locations in the startup folder. Then just put half of the swarm's entry point there, and the leader will restore the rest of the nodes. Righttttt. Yeah, this mechanism is so fucking awesome. So after all of this, what are the possible attack points now? Written up there. So now, after cooking some stuff, reread everything above, just to revise the plan, then reread it again, but this time chart out a clear way to achieve this goal. This is the stage where the webserver's architecture comes into consideration. Then actually achieve this goal.

Why can't I sort of eliminate the need for a swarm, and just have 1 virus out in the open, and another hidden from everything? If the hidden script finds out that the main script's hash has been changed, or that the startup script no longer there, it can just copy itself over right? Done. They can't delete the script, because the hidden script will notice that and reconstruct everything. They can't delete the hidden virus, because first off, they have no idea where it is, because there are no referrals to it. But, they can force stop everything through the task manager right? What is to stop them from doing this? Well, the high availability of the swarm to correct and rebuild processes before they are destroyed?

rewatch starship updates
also the black mirror episodes
and chi stuff

how drivers work?

btw, each time I hear bad apple again, it just sort of steals my soul away. Damn this is good shit

that doc lmao

find that big backup hard drive

also, space-based solar panels seems reasonable, but still harder (20 times harder, my gut feeling), so it's reasonable only if we want to build a civilization in the stars, and not as a means to transition earth, I mean, that would be kinda dumb. So sort of read over the us military's report on space access, also that environment report, with cleanrooms and whatnot, to get the feel of the possibility to actually do these kinds of things

getting dat up to speed. This is kinda like Quang, but like, I deleted that plan already, so let's just make a new one:
- show what attacks and vulnerabilities are like, using the example from u1's files
- install the virus on his machine, then do a demo of current capabilities
- show how the virus works, like the flow once it's on the target machine. Remember to compare with the mpm_event model
- show the overall structure of all current projects, like configs and such. Dive a bit into Docker, but try to stay out of it as much as possible, I'm trying to make him understand, not scare him lmao, Docker can be quite intimidating
- explain what will be his responsibility, and which part will he involve in
- install phpstorm, and stresses the practices. No actually write that down on notes
- explain the importance of the decoupling of payloads and the viruses itself (so that the right design choices will be made), in preparation for the swarm plan to go online. Only after the swarm plan goes online (which in my very optimistic deadline will be 3 days) can I let Dat tweak the UI, which I think he likes more. This implies that I should describe how will the swarm plan works, to sort of press on the importance of decoupling more
- if Dat is comfortable with Docker stuff (which I highly doubt), then explain about K8S and how things will be run in the future

think about splitting the certificates up into 3 categories, virus, magento, and regular, to sort of prevent the dns zone lookup and certificate lookup thing, which can be very uncool

make sure I can't do a directory traversal using get file

copy everything from quang luong's environment over, preserving permissions in the meantime, and registers it (getting a certificate, and include a mode in build for optimized environment. Also remember to tweak the startup times of mysql inside the containers to prevent a failed start procedure)

workloads for dat:
- know what the hell he is doing. This means:
  - daemon models
  - php, how php is executed. Talk about php_mod and then php-fpm, talk about mpm_prefork and mpm_event in the meantime
  - how php communicates with the db
  - how apache works
- implement easy attacks
  - adv.session.MonitorTask
  - easy.ProductKey
  - easy.session.MonitorPartitions
  - easy.session.MonitorScreen
- implement hard attacks
  - adv.SessionHijack
  - easy.CollectBigFile
  - easy.session.KeyLogging
- really, really hard attacks:
  - adv.ActivateSwarm. This one I'm currently doing, so may be just feedback from Dat is important, not his code contribution
  - adv.RedirectTraffic

move timing work on to cron? So that I won't have to have an endless script and just let the system deal with everything?

okay, so may be really quickly, define what the behavior of the new plan will be. There are 2 viruses, 1 naked to the elements, and the other hidden. The hidden is created by the naked one at boot, then the naked one will be recreated when the hidden one spots that the startup script or the script itself is not there anymore or the hashes have changed. If the hases have changed, but the file is still there, that means there have been a reversen engineering attempt, which is defcon 1, in which the startup script will notify the webserver immediately.

all the directories will be named from a list of normal words

Naked one:
- main script, polymorphic in name, start out as mn.cmd
- data file. Stores many things
  - current payloads folder, unencrypted, because they still can't do anything when they know about this
- incoming file, for the hidden script to report into

Hidden one:
- main script
- initial incoming file. This will be created by the naked one, and the naked one will pass some initial parameters, to initialize the hidden one. After the hidden one has read those, communication is cut off, and the incoming file will be deleted by the hidden one. These things will be transferred to:
  - virus location. The hidden one can get the hash just by hashing it.
  - payloads folder. This will be used to recreate the naked one, if necessary

General principle/guideline when doing these things:
- it is assumed that they don't know where both the naked one and the hidden one is. The naked one can be easily seen and traced back through the startup script, but even the system does not know where the hidden one is
- it is assumed that they can:
  - delete them one by one, reasonable assumption
  - stop them via task manager one by one, reasonable assumption provided they don't have specialized tool to stop multiple tasks at once
, thus the system is built to recover all these scenerios. But because they can delete and stop them pretty quickly. 1 second lower estimate, 2 second upper estimate, the mechanism to check on each other must be faster than 1 second, or else the mechanism will not make sense.

dw tv

cron jobs inside docker containers: https://blog.knoldus.com/running-a-cron-job-in-docker-container/
international law: https://www.youtube.com/watch?v=1SbdlteP9Qk&list=PLj3bSusRimZNEIPYNl_7nk2cdoqa48WmY&index=4
"customary rules of international law"
un charter: https://www.un.org/en/sections/un-charter/un-charter-full-text/
https://en.wikipedia.org/wiki/Charter_of_the_United_Nations
"full discharge of liability"
resolutions: https://en.wikipedia.org/wiki/United_Nations_Security_Council_resolution
https://en.wikipedia.org/wiki/United_Nations_resolution

https://pitmonticone.github.io/rcp85-debate/

modes:
- file mode: is expected to be a file, called by an existing virus so won't have to deal with social engineering
- stream mode: is expected to be piped into cmd or sh or bash. If called by the initial installation then have to deal with social engineering
the new installation schema:
- /new/win/{user_handle}, startup script, will always be placed at appdata, stream mode
- /new/win/{user_handle}/location/{location}, startup script, file mode, will be placed at a specific location
- /new/win/{user_handle}/mn/{virus_id}: main script, will contain :pickRandomLocation, :hash and :unixTime, is expected to be a file
- /new/win/{user_handle}/license
- /new/mac/{user_handle}: mac startup script, stream mode
- /new/mac/{user_handle}/mn/{virus_id}: mac main script
swarm thing:
- /new/win/{user_handle}/swarm, /new/win/{user_handle}/swarm/location/{location}, swarm installation script, file mode. Every activity stays within the specified location (default is C:\Users)
- /new/mac/{user_handle}/swarm, /new/mac/{user_handle}/swarm/location/{location}, swarm installation script, file mode

also virus endpoints:
- /vrs/{virus_id}/ping: pinging
- /vrs/{virus_id}/aks: list of attacks
- /vrs/{virus_id}/aks/{attack_id}/code: code of a specific attack
- /vrs/{virus_id}/aks/{attack_id}/report: place to report files and whatnot
- /vrs/{virus_id}/hms: hidden missing, report that the hidden virus has disappeared

also note that the swarm will be as lightweight and mobile as possible, so won't have the baggage of licenses and all that for social engineering

so what's the swarm installation script looks like? It has all the functions that the main script has, and have the base folder embedded, and not from the data file
- pick a random location for the main script, create /dt, /mn.cmd and /ic there
- pick a random location for the utils folder
- send message about the utils folder and the type (1) to the incoming messages

what's the initial installation script now look like? Because this is a stream, so won't have any function the main script has, and preferably can't have any labels and loopbacks
- get the location for the main script (appdata if first time), create /entry.cmd and other dummy social engineering stuff there
- append to the beginning of the main script "set type=0", also set the payloads and utils folder too, so there won't have to be any data loading
- create the startup script

the loops looks like this:
- (any) loads constants, done
  - hidden_ping_time=0
  - last_fetch=:unixTime
- (any) loads data, done
  - type
  - utils
- if there are arguments:
  - (implied naked) fetch:
    - fetches the list of attacks
    - for each attacks, prepares environment, downloads the code, executes it
    - exits
- if there aren't any arguments:
- (any) read the incoming messages to set up environmental variables
- (hidden) delete incoming file
- (naked) save data
- :daemon_loop
- if standalone:
  - if difference between now and last_fetch is 7 seconds, log, fork off and execute "{self} fetch"
- if naked:
  - if difference between now and last_fetch is 7 seconds, log, fork off and execute "{self} fetch"
  - echos now to og
  - checks incoming message, just a "ping", records the time, compares with hidden_ping_time, heal hidden if necessary
- if hidden: if any of these are violated, proceed to clean the naked virus
  - checks existence of naked
  - checks hash of naked
  - checks existence of startup script
  - checks hash of startup script
  - checks time in og
  - ping naked
  - if needs cleaning:
    - reads the old hash, deletes the U!hash:~0,5!.vbs file
    - deletes the location file

features:
- og, outgoing

standalone:
- data:
  - type|0
  - libs|{libs folder}
- incoming by stream init script:
  - type|0
  - libs|{libs folder}

naked:
- data:
  - type|1 // 0 for standalone, 1 for naked, 2 for hidden
  - libs|{libs folder}
  - base|{base location where location randomization happens}
- incoming by file init script:
  - type|1
  - libs|{libs folder}
  - base|{base location}
- incoming by hidden script, normal use, repeatedly:
  - ping|_
- incoming by hidden script, reconstruction: {init script, hidden script normal use}

hidden: note that hidden will only be created by naked, and not any startup scripts
- incoming by naked script on startup: note that this exists for a short while, then hidden deletes it
  - type|2
  - libs|{libs folder}, this is for passing right back to the naked one to construct it
  - base|{base location}
  - lc|{naked location}, mn.cmd and ic is expected to be inside

naked will be given these by hidden:
- incoming:
  - ping|_, this is telling naked that the hidden is still alive and well

what is the failsafe? Like, the nuke button that I can remove when testing stuff out? The base environment where things happen should be contained. This way, I can just delete everything, and both running scripts will be gone

general tso's and wonton soup, see places where I can eat that, then invite dan & chi?

interesting combination with C#: https://stackoverflow.com/questions/54360791/batch-script-to-read-input-text-file-and-build-output-command

verbs to avoid, the built-in commands, the communications one, where standards have been in place and it differs virus to virus: type, ping, vrs, aks
no wait, so because everything just copies each other to recover things, I can get away with obfuscating the intercommunications too. So these are the variables I can do this: libs, base, lc, fetch, mn, ic, dt

But all of these obfuscation needs to have a stringent testing plan. So, when it comes to doing just that, make a batch script that can automate the process? It would be hard to get all the software interfaces together, and it might just not worth it to do that.

Also now that I think about it, I don't need the standalone stuff rite? I can just use the old one, and all will be well. So yeah, go do that

so, things to do for tonight:
- test out the system thoroughly, make sure it works
- incrementally test the obfuscation schema
- test out what's the perfect HIDDEN_PING_INTERVAL. I kinda want it to be either 1 or 2, but can bump it up if necessary. But in principle, it needs to be low, so as to recover fast in case task manager kills it sequentially faster. Let's stick with 1, the download cycle seems to be able to execute something like 10-15 times per second
- create an environment for dat. I sort of need this to be as quick as possible, meaning I can quickly clone everything, again, in 1 command.

i have not deal with the scenereo when the utils folder is gone and naked will have to recreate that

may be, the usb stick still have some content left. I mean, I haven't plugged it in for extended periods of time, and TRIM might not be enabled there. Yeah it has the thing with the operating system there, but just may be? Like, I don't want to lose a part of me

getFile.php has directory traversal problems
https://stackoverflow.com/questions/4205141/preventing-directory-traversal-in-php-but-allowing-paths

change other sites to php-fpm too

remember to switch the php.ini stuff so that I can bring 8MB files back. At startup/php.ini

kay, so I can do the development right back in localhost. Like, just spin up an instance from github and there you go. Still have to think about how the inner vm can deal with that.

clean up the db schema and get rid of unnecessary stuff

oh and the back up, I expect it to be quite large, considering I have the virus-backup instance, and other stuff

